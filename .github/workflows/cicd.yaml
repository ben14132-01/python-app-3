name: python-app-3-cicd

on:
  push:
    paths: 
      - src/**
    branches:
      - main #changed

jobs:
  ci:
    
    runs-on: ubuntu-latest
    steps:
      - name: shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} #changed
          password: ${{ secrets.DOCKERHUB_TOKEN }} #changed
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ben14132/python-app-3:${{ env.COMMIT_ID }} #changed
    outputs: 
      commit_id: ${{ env.COMMIT_ID }} #changed
  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      
      - name: Modify values file
        shell: bash
        run: | #changed
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/python-app-3/values-dev.yaml
      

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with: 
          message: 'Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}'

      - name: Install argocd
        shell: bash
        run: |
          curl -ksSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd
          export PATH=$PATH:/usr/local/bin

      - name: argocd login
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ secrets.ARGOCD_PASSWORD }}
            
      - name: Ensure argocd repo and app 
        shell: bash
        run: |

          # Connects the argocd repo
          repo="https://github.com/ben14132-01/python-app-3.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          # Creates the argocd app
          argocd app get python-app-3 || argocd app create python-app-3 \
            --repo $repo \
            --path charts/python-app-3 \
            --dest-namespace dev \
            --dest-server https://kubernetes.default.svc \
            --values values-dev.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync python-app-3
          argocd app wait python-app-3 --timeout 180